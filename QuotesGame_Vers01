# Created by Alejandro Baraona for EECE2140's Final Project.

import random
import time

# Question bank
quotes = [
    {"quote": "The only way to do great work is to love what you do.", "author": "Steve Jobs"},
    {"quote": "In three words I can sum up everything I've learned about life: it goes on.", "author": "Robert Frost"},
    {"quote": "Be yourself; everyone else is already taken.", "author": "Oscar Wilde"},
    {"quote": "The only thing we have to fear is fear itself.", "author": "Franklin D. Roosevelt"},
    {"quote": "I have a dream.", "author": "Martin Luther King Jr."},
    {"quote": "To be or not to be, that is the question.", "author": "William Shakespeare"},
    {"quote": "Float like a butterfly, sting like a bee.", "author": "Muhammad Ali"},
    {"quote": "In the end, we will remember not the words of our enemies, but the silence of our friends.", "author": "Martin Luther King Jr."}
]

# Function to greet the player
def greet():
    name = input("Welcome to the Famous Quotes Quiz! What's your name? ")
    print(f"Hello, {name}!")
    return name

# Function to display main menu
def show_menu():
    print("\nSelect an option:")
    print("1. Play the game")
    print("2. Credits")

# Function to display credits
def show_credits():
    print("\nGame created for EECE2140's Final Project by Alejandro Baraona for Dr. Nafa.")
    print("Northeastern University College of Engineering Spring 2024")
    print("\nPress 'enter' to go back to the main menu.")

# Function to choose difficulty level
def choose_difficulty():
    print("\nChoose your difficulty level:")
    print("1. Easy: More time to answer, multiple-choice questions with 2 options. (5 lives)")
    print("2. Medium: Moderate time to answer, multiple-choice questions with 4 options. (3 lives)")
    print("3. Hard: Less time to answer, type the answer directly. (1 life)")
    print("4. Custom: Set your own timer, options, and lives.")
    while True:
        try:
            choice = int(input("\nEnter the number corresponding to your choice: "))
            if choice not in [1, 2, 3, 4]:
                raise ValueError
            break
        except ValueError:
            print("Invalid input! Please enter a valid option.")

    if choice == 1:
        return 20, 2, "Multiple Choice", 5
    elif choice == 2:
        return 15, 4, "Multiple Choice", 3
    elif choice == 3:
        return 10, 0, "Type Answer", 1
    elif choice == 4:
        while True:
            try:
                custom_timer = int(input("Enter the timer in seconds: "))
                custom_num_options = int(input("Enter the number of options (0 for type answer): "))
                custom_lives = int(input("Enter the number of lives: "))
                
                # Check if the chosen settings are extreme or nonsensical
                if custom_timer < 1 or custom_num_options == 1 or custom_lives < 0 or custom_num_options > 7:
                    raise ValueError("Invalid settings!")
                
                break
            except ValueError as e:
                print(f"Invalid input! Please enter valid values.")
        
        custom_question_type = "Type Answer" if custom_num_options == 0 else "Multiple Choice"
        return custom_timer, custom_num_options, custom_question_type, custom_lives

# Function to ask a question
def ask_question(quote, timer, num_options, lives):
    print(f'"{quote["quote"]}"')
    print(f"Remaining lives: {lives}")
    
    correct_answer = quote["author"]  # Store the correct answer

    if num_options > 0:
        options = [correct_answer]  # Include correct answer in options
        while len(options) < num_options:
            random_quote = random.choice(quotes)["author"]
            if random_quote not in options:
                options.append(random_quote)
        random.shuffle(options)
        for i, option in enumerate(options):
            print(f"{i+1}. {option}")

    start_time = time.time()
    elapsed_time = 0

    while elapsed_time < timer:
        elapsed_time = time.time() - start_time
        remaining_time = timer - elapsed_time

        # Display countdown
        print(f"Time left: {remaining_time:.1f} seconds", end='\r')

        # Check if time runs out
        if remaining_time <= 0:
            print("\nTime's up! You lose a life.")
            return False, lives - 1

        if num_options > 0:
            try:
                user_answer = int(input("Your answer: "))
                if user_answer < 1 or user_answer > num_options:
                    raise ValueError
                break
            except ValueError:
                print("Invalid input! Please enter a valid option.")
        else:
            user_answer = input("Your answer: ").strip()
            break

    else:
        print("\nTime's up! You lose a life.")
        return False, lives - 1

    if num_options > 0:
        selected_option = options[user_answer - 1]
        if selected_option == correct_answer:  # Check if the selected option matches the correct answer
            print("Correct!")
            return True, lives  # Return True for correct answer
        else:
            print(f"Incorrect! The correct answer is: {correct_answer}")
            return False, lives - 1
    else:
        if user_answer.lower() == correct_answer.lower():
            print("Correct!")
            return True, lives  # Return True for correct answer
        else:
            print(f"Incorrect! The correct answer is: {correct_answer}")
            return False, lives - 1

# Function to play the quiz
def play_quiz():
    while True:
        show_menu()
        choice = input("Enter your choice: ")
        if choice == '1':
            name = greet()
            difficulty, num_options, question_type, lives = choose_difficulty()
            random.shuffle(quotes)
            score = 0
            lives_left = lives
            for quote in quotes:
                print("\n" + "-"*50)
                is_correct, lives_left = ask_question(quote, difficulty, num_options, lives_left)
                if lives_left <= 0:
                    print("Game over! You ran out of lives.")
                    break
                if not is_correct:
                    continue
                score += 1  # Increment score for correct answer
            print("\n" + "-"*50)
            print(f"Quiz complete! Your score: {score}/{len(quotes)}")
            play_again = input("Do you want to play again? (yes/no): ")
            if play_again.lower() != "yes":
                break
        elif choice == '2':
            show_credits()
            back = input()
            if back.lower() == 'b':
                continue
        else:
            print("Invalid choice. Please enter a valid option.")

play_quiz()
