import random
import time

# Question bank
quotes = [
    {"quote": "The only way to do great work is to love what you do.", "author": "Steve Jobs"},
    {"quote": "In three words I can sum up everything I've learned about life: it goes on.", "author": "Robert Frost"},
    {"quote": "Be yourself; everyone else is already taken.", "author": "Oscar Wilde"},
    {"quote": "The only thing we have to fear is fear itself.", "author": "Franklin D. Roosevelt"},
    {"quote": "I have a dream.", "author": "Martin Luther King Jr."},
    {"quote": "To be or not to be, that is the question.", "author": "William Shakespeare"},
    {"quote": "Float like a butterfly, sting like a bee.", "author": "Muhammad Ali"},
    {"quote": "In the end, we will remember not the words of our enemies, but the silence of our friends.", "author": "Martin Luther King Jr."}
]

def greet():
    name = input("Welcome to the Famous Quotes Quiz! What's your name? ")
    print(f"Hello, {name}! Let's test your knowledge of famous quotes.")

def choose_difficulty():
    print("Choose your difficulty level:")
    print("1. Easy")
    print("2. Medium")
    print("3. Hard")
    choice = int(input("Enter the number corresponding to your choice: "))
    if choice == 1:
        return 20, 2, "Multiple Choice", 3
    elif choice == 2:
        return 15, 4, "Multiple Choice", 2
    elif choice == 3:
        return 10, 0, "Type Answer", 1
    else:
        print("Invalid choice. Defaulting to Medium difficulty.")
        return 15, 4, "Multiple Choice", 2

def ask_question(quote, timer, num_options, lives):
    print(f'"{quote["quote"]}"')
    print(f"Remaining lives: {lives}")
    if num_options > 0:
        options = [quote["author"]]
        while len(options) < num_options:
            random_quote = random.choice(quotes)["author"]
            if random_quote not in options:
                options.append(random_quote)
        random.shuffle(options)
        for i, option in enumerate(options):
            print(f"{i+1}. {option}")
    start_time = time.time()
    user_answer = input("Your answer: ")
    elapsed_time = time.time() - start_time
    if elapsed_time > timer:
        print("Time's up! You lose a life.")
        return False, lives - 1
    return user_answer, lives

def play_quiz():
    while True:
        greet()
        difficulty, num_options, question_type, lives = choose_difficulty()
        random.shuffle(quotes)
        score = 0
        lives_left = lives
        for quote in quotes:
            print("\n" + "-"*50)
            user_answer, lives_left = ask_question(quote, difficulty, num_options, lives_left)
            if lives_left == 0:
                print("Game over! You ran out of lives.")
                break
            if not user_answer:
                continue
            if num_options > 0:
                correct_answer = quote["author"]
                options = [quote["author"]]
                while len(options) < num_options:
                    random_quote = random.choice(quotes)["author"]
                    if random_quote not in options:
                        options.append(random_quote)
                if user_answer.isdigit() and 1 <= int(user_answer) <= num_options:
                    selected_option = options[int(user_answer) - 1]
                    if selected_option == correct_answer:
                        print("Correct!")
                        score += 1
                    else:
                        print(f"Incorrect! The correct answer is: {correct_answer}")
                        lives_left -= 1
                else:
                    print(f"Invalid choice! The correct answer is: {correct_answer}")
                    lives_left -= 1
            else:
                if user_answer.lower() == quote["author"].lower():
                    print("Correct!")
                    score += 1
                else:
                    print(f"Incorrect! The correct answer is: {quote['author']}")
                    lives_left -= 1
        print("\n" + "-"*50)
        print(f"Quiz complete! Your score: {score}/{len(quotes)}")
        play_again = input("Do you want to play again? (yes/no): ")
        if play_again.lower() != "yes":
            break

play_quiz()

